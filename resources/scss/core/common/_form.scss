////////////////
// Radio Buttons
///////////////

[type="radio"]:not(:checked),
[type="radio"]:checked {
    position: absolute;
    left: -9999px;
    opacity: 0;

    + label {
        position: relative;
        padding-left: 35px;
        cursor: pointer;
        display: inline-block;
        height: 25px;
        line-height: 25px;
        font-size: 1rem;
        transition: .28s ease;
        user-select: none;
    }
}

[type="radio"] + label {
    &:before,
    &:after {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        margin: 4px;
        width: 16px;
        height: 16px;
        z-index: 0;
        transition: .28s ease;
    }
}

// unchecked styles
[type="radio"]:not(:checked),
[type="radio"]:checked,
[type="radio"].with-gap:checked {
    + label:before,
    + label:after {
        border-radius: 50%;
    }
}

[type="radio"]:not(:checked) + label {
    &:before,
    &:after {
        border: 2px solid #5a5a5a;
    }
}

[type="radio"]:not(:checked) + label:after {
    z-index: -1;
    transform: scale(0);
}

// checked styles
[type="radio"]:checked + label:before {
    border: 2px solid transparent;
    animation: ripple 0.2s linear forwards;
}

[type="radio"]:checked + label:after,
[type="radio"].with-gap:checked + label:before,
[type="radio"].with-gap:checked + label:after {
    border: 2px solid #26a69a;
}

[type="radio"]:checked,
[type="radio"].with-gap:checked {
    + label:after {
        background-color: #26a69a;
        z-index: 0;
    }
}

[type="radio"]:checked + label:after {
    transform: scale(1.02);
}

// radio with gap
[type="radio"].with-gap:checked + label:after {
    transform: scale(0.5);
}

// focused styles
[type="radio"].tabbed:focus + label:before {
    box-shadow: 0 0 0 10px rgba(0, 0, 0, 0.1);
    animation: ripple 0.2s linear forwards;
}

// disabled radio with gap
[type="radio"].with-gap:disabled:checked + label:before {
    border: 2px solid rgba(0, 0, 0, 0.26);
    animation: ripple 0.2s linear forwards;
}

[type="radio"].with-gap:disabled:checked + label:after {
    border: none;
    background-color: rgba(0, 0, 0, 0.26);
}

// disabled styles
[type="radio"]:disabled:not(:checked) + label:before,
[type="radio"]:disabled:checked + label:before {
    background-color: transparent;
    border-color: rgba(0, 0, 0, 0.26);
    animation: ripple 0.2s linear forwards;
}

[type="radio"]:disabled {
    + label {
        color: rgba(0, 0, 0, 0.26);
    }

    &:not(:checked) + label:before {
        border-color: rgba(0, 0, 0, 0.26);
    }

    &:checked + label:after {
        background-color: rgba(0, 0, 0, 0.26);
        border-color: #bdbdbd;
    }
}

[type="radio"] {
    &:not(:checked) {
        + label {
            padding-left: 26px;
            height: 25px;
            line-height: 25px;
            font-weight: normal;
        }
    }

    &:checked {
        + label {
            padding-left: 26px;
            height: 25px;
            line-height: 25px;
            font-weight: normal;
        }
    }
}

@each $key, $val in $colors {
    [type="radio"].radio-col-#{$key} {
        &:checked {
            + label {
                &:after {
                    background-color: $val;
                    border-color: $val;
                    animation: ripple 0.2s linear forwards;
                }
            }
        }
    }
}

@each $key, $val in $colors {
    [type="radio"].with-gap.radio-col-#{$key} {
        &:checked {
            + label {
                &:before {
                    border: 2px solid $val;
                    animation: ripple 0.2s linear forwards;
                }

                &:after {
                    background-color: $val;
                    border: 2px solid $val;
                    animation: ripple 0.2s linear forwards;
                }
            }
        }
    }
}

////////////////
// Checkboxes
///////////////

[type="checkbox"]:not(:checked):not(.custom-control-input),
[type="checkbox"]:not(.custom-control-input):checked {
    position: absolute;
    left: -9999px;
    opacity: 0;
}

[type="checkbox"] + label {
    position: relative;
    padding-left: 35px;
    cursor: pointer;
    display: inline-block;
    height: 25px;
    line-height: 25px;
    font-size: 1rem;
    user-select: none;
}

[type="checkbox"]:not(.custom-control-input) + label:before,
[type="checkbox"]:not(.filled-in):not(.custom-control-input) + label:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 18px;
    height: 18px;
    z-index: 0;
    border: 2px solid #5a5a5a;
    border-radius: 1px;
    margin-top: 2px;
    transition: .2s;
}

[type="checkbox"]:not(.filled-in):not(.custom-control-input) + label:after {
    border: 0;
    transform: scale(0);
}

[type="checkbox"]:not(:checked):not(.custom-control-input):disabled + label:before {
    border: none;
    background-color: rgba(0, 0, 0, 0.26);
}

[type="checkbox"].tabbed.focus + label:after {
    transform: scale(1);
    border: 0;
    border-radius: 50%;
    box-shadow: 0 0 0 10px rgba(0, 0, 0, 0.1);
    background-color: rgba(0, 0, 0, 0.1);
}

[type="checkbox"]:not(.custom-control-input):checked + label:before {
    top: -4px;
    left: -5px;
    width: 12px;
    height: 22px;
    border: 2px solid transparent;
    border-right-color: #26a69a;
    border-bottom-color: #26a69a;
    transform: rotate(40deg);
    backface-visibility: hidden;
    transform-origin: 100% 100%;
}

[type="checkbox"]:not(.custom-control-input):checked:disabled + label:before {
    border-right: 2px solid rgba(0, 0, 0, 0.26);
    border-bottom: 2px solid rgba(0, 0, 0, 0.26);
}

// indeterminate checkbox
[type="checkbox"]:not(.custom-control-input):indeterminate + label:before {
    top: -11px;
    left: -12px;
    width: 10px;
    height: 22px;
    border-top: none;
    border-left: none;
    border-right: 2px solid #26a69a;
    border-bottom: none;
    transform: rotate(90deg);
    backface-visibility: hidden;
    transform-origin: 100% 100%;
}

[type="checkbox"]:not(.custom-control-input):indeterminate:disabled + label:before {
    border-right: 2px solid rgba(0, 0, 0, 0.26);
    background-color: transparent;
}

[type="checkbox"].filled-in {
    + label:after {
        border-radius: 2px;
    }

    + label:before,
    + label:after {
        content: '';
        left: 0;
        position: absolute;
        // .1s delay is for check animation
        transition: border .25s, background-color .25s, width .20s .1s, height .20s .1s, top .20s .1s, left .20s .1s;
        z-index: 1;
    }

    &:not(:checked) + label:before {
        width: 0;
        height: 0;
        border: 3px solid transparent;
        left: 6px;
        top: 10px;
        transform: rotateZ(37deg);
        transform-origin: 100% 100%;
    }

    &:not(:checked) + label:after {
        height: 20px;
        width: 20px;
        background-color: transparent;
        border: 2px solid #5a5a5a;
        top: 0;
        z-index: 0;
    }

    &:checked + label:before {
        top: 0;
        left: 1px;
        width: 8px;
        height: 13px;
        border: 2px solid transparent;
        border-right-color: #fff;
        border-bottom-color: #fff;
        transform: rotateZ(37deg);
        transform-origin: 100% 100%;
    }

    &:checked + label:after {
        top: 0;
        width: 20px;
        height: 20px;
        border: 2px solid #26a69a;
        background-color: #26a69a;
        z-index: 0;
    }

    &.tabbed:focus + label:after {
        border-radius: 2px;
        border-color: #5a5a5a;
        background-color: rgba(0, 0, 0, 0.1);
    }

    &.tabbed:checked:focus + label:after {
        border-radius: 2px;
        background-color: #26a69a;
        border-color: #26a69a;
    }

    &:disabled:not(:checked) + label:before {
        background-color: transparent;
        border: 2px solid transparent;
    }

    &:disabled:not(:checked) + label:after {
        border-color: transparent;
        background-color: #bdbdbd;
    }

    &:disabled:checked + label:before {
        background-color: transparent;
    }

    &:disabled:checked + label:after {
        background-color: #bdbdbd;
        border-color: #bdbdbd;
    }
}

[type="checkbox"] {
    + label {
        padding-left: 26px;
        height: 25px;
        line-height: 21px;
        font-weight: normal;
    }

    &:not(.custom-control-input):not(.filled-in):checked {
        + label {
            &:before {
                top: -4px;
                left: -2px;
                width: 11px;
                height: 19px;
            }
        }
    }

    @each $key, $val in $colors {
        &:checked.chk-col-#{$key} {
            + label {
                &:before {
                    border-right: 2px solid $val;
                    border-bottom: 2px solid $val;
                }
            }
        }
    }
}

[type="checkbox"].filled-in {
    &:checked {
        + label {
            &:after {
                top: 0;
                width: 20px;
                height: 20px;
                border: 2px solid #26a69a;
                background-color: #26a69a;
                z-index: 0;
            }

            &:before {
                border-right: 2px solid #fff !important;
                border-bottom: 2px solid #fff !important;
            }
        }
    }

    @each $key, $val in $colors {
        &:checked.chk-col-#{$key} {
            + label {
                &:after {
                    border: 2px solid $val;
                    background-color: $val;
                }
            }
        }
    }
}

////////////////
// Switches
///////////////

.switch,
.switch * {
    user-select: none;
}

.switch label {
    cursor: pointer;

    input[type="checkbox"] {
        opacity: 0;
        width: 0;
        height: 0;

        &:checked + .lever {
            background-color: #84c7c1;

            &:after {
                background-color: #26a69a;
                left: 24px;
            }
        }
    }

    .lever {
        content: '';
        display: inline-block;
        position: relative;
        width: 40px;
        height: 15px;
        background-color: #818181;
        border-radius: 15px;
        margin: 0 16px;
        transition: background 0.3s ease;
        vertical-align: middle;

        &:after {
            content: '';
            position: absolute;
            display: inline-block;
            width: 21px;
            height: 21px;
            background-color: #f1f1f1;
            border-radius: 21px;
            box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4);
            left: -5px;
            top: -3px;
            transition: left 0.3s ease, background .3s ease, box-shadow 0.1s ease;
        }
    }
}

input[type="checkbox"]:checked:not(:disabled) {
    ~ .lever:active::after,
    &.tabbed:focus ~ .lever::after {
        box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4), 0 0 0 15px rgba(38, 166, 154, 0.1);
    }
}

input[type="checkbox"]:not(:disabled) {
    ~ .lever.active:after,
    &.tabbed:focus ~ .lever::after {
        box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4), 0 0 0 15px rgba(0, 0, 0, 0.08);
    }
}

.switch input[type="checkbox"][disabled] {
    + .lever {
        cursor: default;
    }

    + .lever:after,
    &:checked + .lever:after {
        background-color: #bdbdbd;
    }
}

.switch {
    label {
        font-weight: normal;
        font-size: 13px;

        .lever {
            margin: 0 14px;
        }

        input[type="checkbox"] {
            &:checked {
                @each $key, $val in $colors {
                    &:not(:disabled) {
                        ~ .lever.switch-col-#{$key} {
                            &:active {
                                &:after {
                                    box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4), 0 0 0 15px rgba($val, 0.1);
                                }
                            }
                        }
                    }

                    + .lever.switch-col-#{$key} {
                        background-color: rgba($val, 0.5);

                        &:after {
                            background-color: $val;
                        }
                    }
                }
            }
        }
    }
}

/////////////////////
// Bootstrap Select
///////////////////

.bootstrap-select.btn-group .dropdown-menu {
    margin-top: -40px;
    box-shadow: $box-shadow;
}

/////////////////
// Labels
///////////////

.label {
    padding: 3px 10px;
    line-height: 13px;
    color: $white;
    font-weight: 400;
    border-radius: $radius;
    font-size: 75%;
}

.label-rounded {
    border-radius: 60px;
}

$label-colors: (custom: $megna, success: $success, info: $info, warning: $warning, megna: $megna, primary: $primary, purple: $purple, red: $red, inverse: $inverse, default: $light, white: $white);

@each $key, $val in $label-colors {
    .label-#{$key} {
        background-color: $val;
    }
}

.label-light-warning {
    background-color: $light-warning;
    color: $warning;
}

.label-light-danger {
    background-color: $light-danger;
    color: $danger;
}

.label-light-megna {
    background-color: $light-megna;
    color: $megna;
}

.label-light-primary {
    background-color: $light-primary;
    color: $primary;
}

.label-light-inverse {
    background-color: $light-inverse;
    color: $inverse;
}

form label {
    font-weight: 400;
}

/////////////////
// File Upload
///////////////

.fileupload {
    overflow: hidden;
    position: relative;

    input.upload {
        cursor: pointer;
        filter: alpha(opacity=0);
        font-size: 20px;
        margin: 0;
        opacity: 0;
        position: absolute;
        right: 0;
        top: 0;
    }
}

/////////////////
// Textarea
///////////////

textarea {
    resize: none;
}

/////////////////
// Form-control
///////////////

.form-control {
    color: $bodytext;
    min-height: 38px;
    display: initial;

    &-sm {
        min-height: 20px;
    }

    &:disabled,
    &[readonly] {
        opacity: 0.7;
    }
}

.custom-control-input {
    &:focus ~ .custom-control-indicator {
        box-shadow: none;
    }

    &:checked ~ .custom-control-indicator {
        background-color: $success;
    }
}

.form-control-static {
    padding-top: 0;
}

/////////////////
// Color picker
///////////////

.color-picker-dropdown {
    &:not(.color-and-hex) > button {
        padding: 5px;
    }

    &.type-hex8 {
        .color-code {
            width: 95px;
        }
    }

    > button {
        padding: 0 0 0 7px;
        border-radius: 0.25rem !important;

        &:hover {
            background-color: initial !important;
            color: initial !important;
        }

        .color-code {
            line-height: 1;
            display: inline-block;
            padding: 10px;
            width: 78px;
            text-align: left;
        }

        .color-preview {
            display: inline-block;
            width: 25px;
            border: 1px solid $light-text;
        }
    }

    .dropdown-menu {
        padding-top: 0;
        padding-bottom: 0;
    }
}

/////////////////
// General form
///////////////

.form-group {
    margin-bottom: 25px;
}

.form-bordered .form-group {
    border-bottom: 1px solid $border;
    padding-bottom: 20px;
}

form p {
    margin-bottom: 10px;
    text-align: left;

    &:last-child {
        margin-bottom: 0;
    }
}

.form-horizontal label {
    margin-bottom: 0;
}

.has-error {
    label {
        color: $danger;
    }

    .form-control {
        border-color: $danger;

        &:focus {
            border-color: $danger;
            box-shadow: $danger-input-shadow;
        }
    }
}

.input-group {
    > .multiselect {
        width: 1%;
        flex: 1 1 auto;

        &:not(:first-child) {
            .multiselect__tags {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
        }

        &:not(:last-child) {
            .multiselect__tags {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
        }
    }
}

label.label-block,
.label-block label.col-form-legend {
    display: block;
}

.droppable {
    text-align: center;
    background-color: $droppable;
    border: 2px dashed darken($droppable, 15%);
    border-radius: .25rem;
    padding: 15px;
    transition: .3s background-color;

    &:hover {
        background-color: darken($droppable, 5%);
    }
}

.content-copy {
    cursor: pointer;
}